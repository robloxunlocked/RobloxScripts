local Client = require(game.ReplicatedStorage.Library.Client)
local Library = require(game.ReplicatedStorage.Library)
local Orbs = getsenv(game.Players.LocalPlayer.PlayerScripts.Scripts.Game.Orbs)

debug.setupvalue(Client.Network.Invoke, 1, function() return true end)
debug.setupvalue(Client.Network.Fire, 1, function() return true end)

function GetCoins(Area)
    local Coins = {}
    local allCoins = Client.Network.Invoke('Get Coins')
    for i, v in next, allCoins do 
        if v.a == Area then 
            Coins[i] = v
        end 
    end 
    return Coins
end 

function GetPets()
    return Client.PetCmds.GetEquipped() 
end 

local assignedCoins = {}  -- Table to store assigned coins and their assigned pets

-- Collect all existing orbs
for i, v in pairs(workspace.__THINGS.Orbs:GetChildren()) do 
    Orbs.Collect(v)
end 

-- Collect orbs when new ones are added
workspace.__THINGS.Orbs.ChildAdded:Connect(function(v)
    Orbs.Collect(v)
end)

while true do 
    if _G.AutoFarm then
        local Pets = GetPets()
        local Coins = GetCoins(_G.Area or 'Town')
        local coinParent = workspace.__THINGS.Coins -- Store the parent reference

        for i, v in next, Coins do
            if coinParent:FindFirstChild(i) and _G.AutoFarm and not assignedCoins[i] then 
                -- Find an available pet to assign to the coin
                local assignedPet = nil
                for _, Pet in next, Pets do 
                    if not assignedPet then
                        assignedPet = Pet
                        break
                    end
                end 

                if assignedPet then
                    assignedCoins[i] = assignedPet.uid  -- Mark the coin as assigned to the pet
                    task.spawn(function()
                        if _G.AutoFarm then
                            Client.Network.Invoke('Join Coin', i, {assignedPet.uid})
                            Client.Network.Fire('Farm Coin', i, assignedPet.uid)
                            repeat task.wait() until not coinParent:FindFirstChild(i)
                            assignedCoins[i] = nil  -- Clear the assignment when the coin is no longer available
                        end
                    end)
                end 
            end 
        end 
        task.wait()
    end
    task.wait()
end 
